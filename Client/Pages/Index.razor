@page "/"
@page "/index"

<Home Title="Welcome to the BlazorHostedIdentity.Client application." AdditionalAttributes="AdditionalAttributes">
  <ChildContent>
    <MudText Typo="Typo.body2">
      Feel free to
      <MudLink Href="https://shockzinfinity.github.io" target="_blank">visit my blog</MudLink>
      any time you want.
    </MudText>
  </ChildContent>
  <ContactMe>
    <MudText Typo="Typo.body2">
      Feel free to send email <MudLink Href="mailto://shockzinfinity@gmail.com">shockzinfinity@gmail.com</MudLink>
    </MudText>
  </ContactMe>
</Home>

<br />

<MudText Typo="Typo.h5">
  Use the following links to explore different examples
  <br />
  of using a JS code with .NET in Blazor WebAssembly Project:
</MudText>
<MudDivider DividerType="DividerType.Middle" Class="my-6" />
<ul>
  <li>
    <MudChip Icon="@Icons.Material.Filled.Extension" Color="Color.Dark">Extensions</MudChip>
    <MudLink Href="/jsindotnet">
      How to call JavaScript code from .NET
    </MudLink>
  </li>
  <li>
    <MudChip Icon="@Icons.Material.Filled.Extension" Color="Color.Dark">Extensions</MudChip>
    <MudLink Href="/dotnetinjs">
      How to call .NET code from JavaScript
    </MudLink>
  </li>
  <li>
    <MudChip Icon="@Icons.Material.Filled.Extension" Color="Color.Dark">Extensions</MudChip>
    <MudLink Href="/wrappjsindotnet">
      Wrapping JS Library in C#
    </MudLink>
  </li>
  <li>
    <MudChip Icon="@Icons.Material.Filled.Extension" Color="Color.Dark">Extensions</MudChip>
    <MudLink Href="/infinite">
      Infinite scrolling
    </MudLink>
  </li>
</ul>

@code {
  public Dictionary<string, object> AdditionalAttributes { get; set; } = new Dictionary<string, object>
{
    {"Image", "/assets/shockzHomePicture.jpg" },
    {"alt", "Home component" }
  };
}